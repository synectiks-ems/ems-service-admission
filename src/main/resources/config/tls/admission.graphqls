scalar Date

type Query {
	getAbc: Long
}

type Mutation {
	addAdmissionEnquiry(input: AdmissionEnquiryInput):AdmissionEnquiryPayload
}

type AdmissionEnquiryPayload {
	cmsAdmissionEnquiryVo: CmsAdmissionEnquiryVo
}
  admissionEnquiry(id: Long!): AdmissionEnquiry!
  admissionEnquiries:[AdmissionEnquiry!]!

input AdmissionEnquiryInput {
	    id: Long
        studentName: String
        studentMiddleName: String
        studentLastName:  String
        cellPhoneNo:  String
        landLinePhoneNo:  String
        emailId:  String
        dateOfBirth:  Date
        gender: String
        highestQualification:  String
        modeOfEnquiry:  String
        enquiryDate: Date
        comments:  String
        enquiryStatus: String
	    branchId: Long
        departmentId: Long
        courseId: Long
        semesterId: Long
        batchId: Long
        stateId: Long
        cityId: Long
        academicYearId: Long
        strEnquiryDate: Long
}

type CmsAdmissionEnquiryVo {
	id: Long
    studentName: String
    studentMiddleName: String
    studentLastName:  String
    cellPhoneNo:  String
    landLinePhoneNo:  String
    emailId:  String
    dateOfBirth:  Date
    gender: String
    highestQualification:  String
    modeOfEnquiry:  String
    enquiryDate: Date
    comments:  String
    enquiryStatus: String
    createdBy: String
    createdOn: Date
    updatedBy: String
    updatedOn: Date
    status: String
    strCreatedOn: String
    strUpdatedOn: String
    errorCode: Long
    errorDescription: String
}
